services:
  backend:
    image: drtau/eventplanner-backend:1.0.0
    container_name: event_planner_backend
    restart: always
    environment:
      TOKEN: insert_token_here
      ConnectionStrings__DefaultConnection: Host=db;Port=5432;Username=admin;Password=admin;Database=event_planner
      TelegramBotUrl: http://telegram_bot:5000
      LLMService__Url: http://llm_service:8002
      ChatService__Url: http://chat_service:3001
    ports:
      - "2281:8080"
    depends_on:
      - db
      - redis
    
  miniapp:
    image: drtau/eventplanner-miniapp:1.0.1
    container_name: event_planner_miniapp
    restart: always
    ports:
      - "2282:3000"
    environment:
      API_SERVER_BASE_URL: http://backend:8080

  telegram_bot:
    image: drtau/eventplanner-telegram-bot:1.0.0
    container_name: event_planner_telegram_bot
    restart: always
    environment:
      TELEGRAM_BOT_TOKEN: insert_token_here
      TELEGRAM_BOT_URL: http://telegram_bot:5000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LLMService__Url: http://llm_service:8002
      ChatService__Url: http://chat_service:3001
    depends_on:
      - redis
      - backend

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: event_planner
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  

  redis:
    image: redis:latest
    container_name: telegram_bot_redis
    restart: always
    volumes:
      - redis_data:/data

volumes:
  pgdata:
  redis_data:
    driver: local

